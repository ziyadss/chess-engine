<component name="InspectionProjectProfileManager">
  <profile version="1.0">
    <option name="myName" value="chess_engine" />
    <inspection_tool class="ArgumentSelectionDefects" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="clangTidyCheckOptions">
        <list>
          <ClangTidyCheckOption>
            <option name="optionName" value="clion-argument-selection-defects.ShortParametersNames" />
            <option name="optionValue" value="1" />
          </ClangTidyCheckOption>
        </list>
      </option>
    </inspection_tool>
    <inspection_tool class="ClangTidy" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="clangTidyChecks" value="-*,mpi-*,bugprone-*,-bugprone-signal-handler,-bugprone-narrowing-conversions,-bugprone-redundant-branch-condition,-bugprone-exception-escape,-bugprone-unchecked-optional-access,-bugprone-shared-ptr-array-mismatch,-bugprone-implicit-widening-of-multiplication-result,-bugprone-signed-char-misuse,-bugprone-bool-pointer-implicit-conversion,-bugprone-unhandled-exception-at-new,-bugprone-infinite-loop,-bugprone-easily-swappable-parameters,-bugprone-stringview-nullptr,cert-err52-cpp,cert-err60-cpp,cert-err34-c,cert-str34-c,cert-dcl21-cpp,cert-msc50-cpp,cert-msc51-cpp,cert-dcl58-cpp,cert-flp30-c,cppcoreguidelines-pro-type-member-init,cppcoreguidelines-slicing,cppcoreguidelines-interfaces-global-init,cppcoreguidelines-pro-type-static-cast-downcast,cppcoreguidelines-narrowing-conversions,google-default-arguments,google-runtime-operator,google-explicit-constructor,hicpp-multiway-paths-covered,hicpp-exception-baseclass,misc-unconventional-assign-operator,misc-misplaced-const,misc-new-delete-overloads,misc-non-copyable-objects,misc-no-recursion,misc-throw-by-value-catch-by-reference,misc-uniqueptr-reset-release,modernize-*,-modernize-use-trailing-return-type,openmp-use-default-none,performance-*,-performance-no-int-to-ptr,portability-simd-intrinsics,readability-*,-readability-redundant-preprocessor,-readability-named-parameter,-readability-function-size,-readability-simplify-boolean-expr,-readability-identifier-length,-readability-duplicate-include,-readability-magic-numbers,-readability-braces-around-statements,-readability-redundant-member-init,-readability-suspicious-call-argument,-readability-qualified-auto,-readability-isolate-declaration,-readability-uppercase-literal-suffix,-readability-container-data-pointer,-readability-else-after-return,-readability-redundant-access-specifiers,-readability-function-cognitive-complexity,-readability-implicit-bool-conversion,-readability-container-contains,-readability-identifier-naming" />
    </inspection_tool>
    <inspection_tool class="Misra" enabled="false" level="WARNING" enabled_by_default="false">
      <option name="myMisraCPPChecks" value="clion-misra-cpp2008-*,-clion-misra-cpp2008-4-5-2,-clion-misra-cpp2008-4-5-1,-clion-misra-cpp2008-6-3-1,-clion-misra-cpp2008-2-13-3,-clion-misra-cpp2008-5-0-4,-clion-misra-cpp2008-6-6-5,-clion-misra-cpp2008-6-4-1" />
    </inspection_tool>
    <inspection_tool class="OCInconsistentNaming" enabled="true" level="WEAK WARNING" enabled_by_default="true" />
    <inspection_tool class="OCUnusedGlobalDeclaration" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="OCUnusedIncludeDirective" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="strategy" value="RemoveNotRequired" />
      <option name="showInHeaders" value="true" />
    </inspection_tool>
    <inspection_tool class="Simplify" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="clangTidyCheckOptions">
        <list>
          <ClangTidyCheckOption>
            <option name="optionName" value="clion-simplify.SimplifyConstantConditions" />
            <option name="optionValue" value="1" />
          </ClangTidyCheckOption>
          <ClangTidyCheckOption>
            <option name="optionName" value="clion-simplify.SimplifyIfWithReturn" />
            <option name="optionValue" value="1" />
          </ClangTidyCheckOption>
          <ClangTidyCheckOption>
            <option name="optionName" value="clion-simplify.SimplifyTernaryWithConstantBranch" />
            <option name="optionValue" value="1" />
          </ClangTidyCheckOption>
          <ClangTidyCheckOption>
            <option name="optionName" value="clion-simplify.SimplifyEqualToTrueFalse" />
            <option name="optionValue" value="1" />
          </ClangTidyCheckOption>
        </list>
      </option>
      <option name="enableSimplifyIfWithReturn" value="true" />
    </inspection_tool>
    <inspection_tool class="UnconstrainedVariableType" enabled="true" level="WARNING" enabled_by_default="true" />
  </profile>
</component>